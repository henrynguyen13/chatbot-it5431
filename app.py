import re
import uuid
from datetime import datetime

import streamlit as st

from chatbot import process_query, clear_memory, load_memory_from_history
from history import init_db, save_chat_session, get_chat_sessions, load_chat_session
from intents import handle_buy_laptop
from invoice import init_invoice_table

# Kh·ªüi t·∫°o DB
init_db()
init_invoice_table()

# C·∫•u h√¨nh trang
st.set_page_config(page_title="Laptop Chatbot", page_icon="üíª")

# print("session_state:", st.session_state)

# Th√™m n√∫t ·∫©n ƒë·ªÉ k√≠ch ho·∫°t form
st.markdown("""
<button id="buy-laptop-btn" style="display:none;"></button>
<input type="hidden" id="laptop-name">
""", unsafe_allow_html=True)

# Th√™m form ƒë·∫∑t h√†ng (·∫©n ban ƒë·∫ßu)
if "show_buy_form" not in st.session_state:
    st.session_state.show_buy_form = False

# if st.session_state.show_buy_form:
#     laptop_name = st.session_state.buy_laptop_name
#     handle_buy_laptop(laptop_name)

# Kh·ªüi t·∫°o l·ªãch s·ª≠ chat v√† session_id n·∫øu ch∆∞a c√≥
if "chat_history" not in st.session_state:
    st.session_state.chat_history = []
if "session_id" not in st.session_state:
    st.session_state.session_id = str(uuid.uuid4())
if "filter_history" not in st.session_state:
    st.session_state.filter_history = []

# Sidebar
st.sidebar.title("üõ† Chat History")

# N√∫t t·∫°o phi√™n chat m·ªõi
if st.sidebar.button("üÜï New Chat"):
    st.session_state.show_buy_form = False
    st.session_state.chat_history = []
    st.session_state.session_id = str(uuid.uuid4())  # T·∫°o session_id m·ªõi
    st.session_state.filter_history = []
    clear_memory()
    st.rerun()

# Hi·ªÉn th·ªã danh s√°ch phi√™n ƒë√£ l∆∞u
sessions = get_chat_sessions()
# print("sessions:", sessions)
if sessions:
    st.sidebar.markdown("### Recent Sessions")
    # S·∫Øp x·∫øp c√°c phi√™n theo created_at gi·∫£m d·∫ßn (g·∫ßn nh·∫•t tr∆∞·ªõc)
    for session_id, created_at in sorted(sessions, key=lambda x: x[1], reverse=True):
        # ƒê·ªãnh d·∫°ng th·ªùi gian cho d·ªÖ ƒë·ªçc
        try:
            formatted_time = datetime.fromisoformat(created_at).strftime("%b %d, %Y %H:%M")
        except ValueError:
            formatted_time = created_at
        
        # T·∫°o n√∫t cho m·ªói phi√™n
        session_label = f"Session {session_id[:8]} - {formatted_time}"
        if st.sidebar.button(session_label, key=f"session_{session_id}"):
            if session_id != st.session_state.session_id:
                st.session_state.chat_history, st.session_state.filter_history = load_chat_session(session_id)
                st.session_state.session_id = session_id
                load_memory_from_history(st.session_state.chat_history)
                st.rerun()
else:
    st.sidebar.text("No previous sessions found.")

# Ti√™u ƒë·ªÅ
st.title("üíª Chatbot Laptop Advisor")

# Hi·ªÉn th·ªã l·ªãch s·ª≠ chat
for chat in st.session_state.chat_history:
    with st.chat_message(chat["role"]):
        st.markdown(chat["message"])

# √î nh·∫≠p li·ªáu chat
user_input = st.chat_input("Enter your message, example: Laptop Dell under 15 million VND, RAM 8GB...")

# X·ª≠ l√Ω khi ng∆∞·ªùi d√πng nh·∫≠p v√† g·ª≠i
if user_input:
    # Th√™m tin nh·∫Øn ng∆∞·ªùi d√πng v√†o l·ªãch s·ª≠
    st.session_state.chat_history.append({"role": "user", "message": user_input})

    # Hi·ªÉn th·ªã tin nh·∫Øn ng∆∞·ªùi d√πng
    with st.chat_message("user"):
        st.markdown(user_input)

    # X·ª≠ l√Ω truy v·∫•n
    with st.chat_message("assistant"):
        placeholder = st.empty()
        placeholder.markdown("üí¨ Processing...")
        result = process_query(user_input, st.session_state.filter_history)

        # Ki·ªÉm tra n·∫øu k·∫øt qu·∫£ ch·ª©a m√£ k√≠ch ho·∫°t form
        if result and result.startswith("BUY_LAPTOP_TRIGGER:"):
            laptop_name = result.split(":", 1)[1]
            print('Order laptop: ', laptop_name)
            st.session_state.show_buy_form = True
            st.session_state.buy_laptop_name = laptop_name
            placeholder.empty()
            st.markdown(f"üéâ Awesome! You want to order laptop: **{laptop_name}**")
            st.markdown("Please fill out the form below to complete your order.")
        elif result:  # X·ª≠ l√Ω k·∫øt qu·∫£ b√¨nh th∆∞·ªùng
            placeholder.empty()
            st.markdown(result)
        else:  # X·ª≠ l√Ω khi result l√† None
            placeholder.empty()
            st.error("Sorry, I couldn't process your request. Please try again.")

    # Th√™m c√¢u tr·∫£ l·ªùi v√†o l·ªãch s·ª≠
    st.session_state.chat_history.append({"role": "assistant", "message": result})

    # L∆∞u t·ª± ƒë·ªông v√†o c∆° s·ªü d·ªØ li·ªáu
    save_chat_session(st.session_state.session_id, st.session_state.chat_history, st.session_state.filter_history)
    st.success("‚úÖ Session saved automatically.")

    # C·∫≠p nh·∫≠t giao di·ªán
    st.rerun()

if st.session_state.get("show_buy_form", False):
    laptop_name = st.session_state.get("buy_laptop_name", "")
    print(laptop_name)
    handle_buy_laptop(laptop_name)
